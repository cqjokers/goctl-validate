// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type AdminLoginReq struct {
	Username string `json:"username" validate:"required,min=3,max=20,alphanum"`
	Password string `json:"password" validate:"required,min=8,max=30"`
	TwoFA    string `json:"twoFA,omitempty" validate:"omitempty,len=6,numeric"`
}

type AssignRoleReq struct {
	AdminId int64  `json:"adminId" validate:"required,min=1"`
	RoleId  int64  `json:"roleId" validate:"required,min=1"`
	Reason  string `json:"reason" validate:"required,min=5,max=200"`
}

type CommonResp struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data,omitempty"`
}

type PasswordChangeReq struct {
	UserId          int64  `json:"userId" validate:"required,min=1"`
	OldPassword     string `json:"oldPassword" validate:"required,min=6,max=20"`
	NewPassword     string `json:"newPassword" validate:"required,min=6,max=20"`
	ConfirmPassword string `json:"confirmPassword" validate:"required,min=6,max=20"`
}

type UserLoginReq struct {
	Username string `json:"username" validate:"required,min=3,max=20"`
	Password string `json:"password" validate:"required,min=6,max=20"`
	Captcha  string `json:"captcha" validate:"required,len=4,numeric"`
}

type UserQueryReq struct {
	Page     int    `json:"page" validate:"required,min=1"`
	PageSize int    `json:"pageSize" validate:"required,min=1,max=100"`
	Keyword  string `json:"keyword,omitempty" validate:"omitempty,min=1,max=50"`
	Status   int    `json:"status" validate:"required,oneof=0 1"`
	UserType int    `json:"userType" validate:"required,oneof=1 2 3"`
}

type UserRegisterReq struct {
	Username string `json:"username" validate:"required,min=3,max=20,alphanum"`
	Password string `json:"password" validate:"required,min=6,max=20"`
	Email    string `json:"email" validate:"required,email"`
	Phone    string `json:"phone" validate:"required,len=11,numeric"`
	Nickname string `json:"nickname" validate:"required,min=1,max=30"`
	Age      int    `json:"age" validate:"required,min=1,max=150"`
	Gender   int    `json:"gender" validate:"required,oneof=0 1 2"`
}

type UserUpdateReq struct {
	UserId      int64   `json:"userId" validate:"required,min=1"`
	Nickname    *string `json:"nickname,omitempty" validate:"omitempty,min=1,max=30"`
	Email       *string `json:"email,omitempty" validate:"omitempty,email"`
	Phone       *string `json:"phone,omitempty" validate:"omitempty,len=11,numeric"`
	Avatar      *string `json:"avatar,omitempty" validate:"omitempty,url"`
	Description *string `json:"description,omitempty" validate:"omitempty,max=500"`
}
